@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Navigations
@inject ThemeService ThemeService


<div class="toolbar-container @(ThemeService.CurrentTheme)">
    <SfToolbar CssClass="toolbar-buttons">

        <ToolbarItems>

            <ToolbarItem PrefixIcon="e-icons e-reset" CssClass="e-flat toolbar-btn" OnClick="@(e => OnToolClick("reset"))" TooltipText="Reset"></ToolbarItem>
            <ToolbarItem PrefixIcon="e-icons e-zoom-to-fit" CssClass="e-flat toolbar-btn" OnClick="@(e => OnToolClick("fitToPage"))" TooltipText="Fit To Page"></ToolbarItem>
            <ToolbarItem PrefixIcon="e-icons e-zoom-in" CssClass="e-flat toolbar-btn" OnClick="@(e => OnToolClick("zoomIn"))" TooltipText="Zoom In"></ToolbarItem>
            <ToolbarItem PrefixIcon="e-icons e-zoom-out" CssClass="e-flat toolbar-btn" OnClick="@(e => OnToolClick("zoomOut"))" TooltipText="Zoom Out"></ToolbarItem>

        </ToolbarItems>
    </SfToolbar>
    <SfTextBox @ref="TextBoxDropDownObj" Placeholder="Search Node"
               CssClass="toolbar-search no-focus-outline remove-hover-effect"
               Created="@AddSearchIcon" Input="OnSearchInput"></SfTextBox>

</div>

@code{
    SfTextBox TextBoxDropDownObj { get; set; }
    [Parameter] public EventCallback<string> OnToolBarAction { get; set; }

    private void OnToolClick(string action)
    {
        OnToolBarAction.InvokeAsync(action);
    }

    private void OnSearchInput(InputEventArgs args)
    {
        var value = args?.Value?.ToString();
        OnToolBarAction.InvokeAsync($"search:{value}");
    }

    private async void AddSearchIcon()
    {
        if (TextBoxDropDownObj != null)
        {
            await TextBoxDropDownObj.AddIconAsync("prepend", "e-icons e-search search-icon");
        }
    }
    public void ClearSearch()
    {
        TextBoxDropDownObj.Value = "";
    }
}

<style>
    .toolbar-container {
        position: absolute;
        bottom: 10px;
        left: 10px;
        display: flex;
        align-items: center;
        border-radius: 3px;
    }
    
    .toolbar-container .e-toolbar {
        border: 0;
        background: none;
    }

    .toolbar-container .e-toolbar .e-toolbar-items {
        margin: 0;
        padding: 0;
    }

    .e-toolbar .e-toolbar-item .e-tbar-btn{
        background: #343A401A !important;
    }

    .toolbar-search {
        flex: 1;
        margin-left: 10px;
    }

/*     .toolbar-container.light .e-input-group {
        border-bottom: 1.8px solid #343A401A !important;
    }
    
    .toolbar-container.dark .e-input-group {
        border-bottom: 1.8px solid #F8F9FA !important;
    } */

    /* Bottom Border of Textbox */
/*     .toolbar-container.light .e-input-group:not(.e-float-icon-left):not(.e-float-input)::before, .e-input-group:not(.e-float-icon-left):not(.e-float-input)::after, .e-input-group.e-float-icon-left:not(.e-float-input) .e-input-in-wrap::before, .e-input-group.e-float-icon-left:not(.e-float-input) .e-input-in-wrap::after, .e-input-group.e-control-wrapper:not(.e-float-icon-left):not(.e-float-input)::before, .e-input-group.e-control-wrapper:not(.e-float-icon-left):not(.e-float-input)::after, .e-input-group.e-control-wrapper.e-float-icon-left:not(.e-float-input) .e-input-in-wrap::before, .e-input-group.e-control-wrapper.e-float-icon-left:not(.e-float-input) .e-input-in-wrap::after, .e-float-input.e-input-group:not(.e-float-icon-left) .e-float-line::before, .e-float-input.e-input-group:not(.e-float-icon-left) .e-float-line::after, .e-float-input.e-input-group.e-float-icon-left .e-input-in-wrap .e-float-line::before, .e-float-input.e-input-group.e-float-icon-left .e-input-in-wrap .e-float-line::after, .e-float-input.e-control-wrapper.e-input-group:not(.e-float-icon-left) .e-float-line::before, .e-float-input.e-control-wrapper.e-input-group:not(.e-float-icon-left) .e-float-line::after, .e-float-input.e-control-wrapper.e-input-group.e-float-icon-left .e-input-in-wrap .e-float-line::before, .e-float-input.e-control-wrapper.e-input-group.e-float-icon-left .e-input-in-wrap .e-float-line::after, .e-filled.e-input-group.e-float-icon-left:not(.e-float-input)::before, .e-filled.e-input-group.e-float-icon-left:not(.e-float-input)::after, .e-filled.e-input-group.e-control-wrapper.e-float-icon-left:not(.e-float-input)::before, .e-filled.e-input-group.e-control-wrapper.e-float-icon-left:not(.e-float-input)::after, .e-filled.e-float-input.e-input-group.e-float-icon-left .e-float-line::before, .e-filled.e-float-input.e-input-group.e-float-icon-left .e-float-line::after, .e-filled.e-float-input.e-control-wrapper.e-input-group.e-float-icon-left .e-float-line::before, .e-filled.e-float-input.e-control-wrapper.e-input-group.e-float-icon-left .e-float-line::after{
        background: #A020F0;
    } */
    
</style>